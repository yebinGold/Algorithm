def solution(numbers):
  # [0, 0, 0] => "0"
    if max(numbers) == 0:
        return "0"

    numbers = sorted(list(map(lambda n: str(n) * 3, numbers)), reverse = True)

    return "".join(list(map(lambda n: n[0:len(n) // 3], numbers)))  


"""
** 반례를 못 찾아서 힌트를 참고한 코드


처음 혼자서 작성한 풀이에서는 맨 뒤 숫자를 늘려서 자릿수만 동일하게 3으로 맞춰준 후에 정렬하였으나
ex) 1 -> 1111

같은 결과가 나오는 숫자들을 제대로 정렬할 수 없다는 문제가 있었다.
ex) 10 -> 1000, 100 -> 1000, 1000 -> 1000

이후 다른 사람들의 힌트 및 풀이과정을 참고하여
숫자 자체를 반복하여 자릿수를 늘린 후에 정렬하도록 수정하였다.
ex) 10 -> 1010, 100 -> 100100

이때, 문제에서 주어지는 입력값의 범위가 0 이상 1000 이하이기 때문에
주어지는 입력을 string 기준으로 비교 정렬하는 과정에서 자릿수를 최소 3 이상으로 맞취준다. (*3)
ex) 2배로 하면
[5, 552] -> [55, 552552] => 정렬하면 [552552, 55] (X)

ex) 3배로 하면
[5, 552] -> [555, 552552552] => 정렬하면 [555, 552552552] (O)

"""
